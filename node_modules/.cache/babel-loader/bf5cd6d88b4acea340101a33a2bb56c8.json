{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wajih\\\\desktop\\\\rest-rant-monorepo\\\\frontend\\\\src\\\\places\\\\NewCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewCommentForm({\n  place,\n  onSubmit\n}) {\n  _s();\n\n  const [authors, setAuthors] = useState([]);\n  const [comment, setComment] = useState({\n    content: '',\n    stars: 3,\n    rant: false,\n    authorId: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      var _users$;\n\n      const response = await fetch(`https://rest-rant-api.herokuapp.com/users`);\n      const users = await response.json();\n      setComment({ ...comment,\n        authorId: (_users$ = users[0]) === null || _users$ === void 0 ? void 0 : _users$.userId\n      });\n      setAuthors(users);\n    };\n\n    fetchData();\n  }, []);\n  let authorOptions = authors.map(author => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: author.userId,\n      children: [author.firstName, \" \", author.lastName]\n    }, author.userId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  });\n\n  function handleSubmit(e) {\n    var _authors$;\n\n    e.preventDefault();\n    onSubmit(comment);\n    setComment({\n      content: '',\n      stars: 3,\n      rant: false,\n      authorId: (_authors$ = authors[0]) === null || _authors$ === void 0 ? void 0 : _authors$.userId\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          value: comment.content,\n          onChange: e => setComment({ ...comment,\n            content: e.target.value\n          }),\n          className: \"form-control\",\n          id: \"content\",\n          name: \"content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-sm-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"state\",\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: comment.authorId,\n          onChange: e => setComment({ ...comment,\n            authorId: e.target.value\n          }),\n          children: authorOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-sm-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"stars\",\n          children: \"Star Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: comment.stars,\n          onChange: e => setComment({ ...comment,\n            stars: e.target.value\n          }),\n          type: \"range\",\n          step: \"0.5\",\n          min: \"1\",\n          max: \"5\",\n          id: \"stars\",\n          name: \"stars\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-sm-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rand\",\n          children: \"Rant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          checked: place.rant,\n          onClick: e => setComment({ ...comment,\n            rant: e.target.checked\n          }),\n          type: \"checkbox\",\n          id: \"rant\",\n          name: \"rant\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      value: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewCommentForm, \"WLGdkE/zIPNckFWxzuZRV+DL4z8=\");\n\n_c = NewCommentForm;\nexport default NewCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"sources":["C:/Users/Wajih/desktop/rest-rant-monorepo/frontend/src/places/NewCommentForm.js"],"names":["useState","useEffect","useHistory","NewCommentForm","place","onSubmit","authors","setAuthors","comment","setComment","content","stars","rant","authorId","fetchData","response","fetch","users","json","userId","authorOptions","map","author","firstName","lastName","handleSubmit","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nfunction NewCommentForm({ place, onSubmit }) {\r\n\r\n    const [authors, setAuthors] = useState([])\r\n\r\n    const [comment, setComment] = useState({\r\n        content: '',\r\n        stars: 3,\r\n        rant: false,\r\n        authorId: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await fetch(`https://rest-rant-api.herokuapp.com/users`)\r\n            const users = await response.json()\r\n            setComment({ ...comment, authorId: users[0]?.userId})\r\n            setAuthors(users)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    let authorOptions = authors.map(author => {\r\n        return <option key={author.userId} value={author.userId}>{author.firstName} {author.lastName}</option>\r\n    })\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        onSubmit(comment)\r\n        setComment({\r\n            content: '',\r\n            stars: 3,\r\n            rant: false,\r\n            authorId: authors[0]?.userId\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-sm-12\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea\r\n                        required\r\n                        value={comment.content}\r\n                        onChange={e => setComment({ ...comment, content: e.target.value })}\r\n                        className=\"form-control\"\r\n                        id=\"content\"\r\n                        name=\"content\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-sm-4\">\r\n                    <label htmlFor=\"state\">Author</label>\r\n                    <select className=\"form-control\" value={comment.authorId} onChange={e => setComment({ ...comment, authorId: e.target.value })}>\r\n                        {authorOptions}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group col-sm-4\">\r\n                    <label htmlFor=\"stars\">Star Rating</label>\r\n                    <input\r\n                        value={comment.stars}\r\n                        onChange={e => setComment({ ...comment, stars: e.target.value })}\r\n                        type=\"range\"\r\n                        step=\"0.5\"\r\n                        min=\"1\"\r\n                        max=\"5\"\r\n                        id=\"stars\"\r\n                        name=\"stars\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group col-sm-4\">\r\n                    <label htmlFor=\"rand\">Rant</label>\r\n                    <input\r\n                        checked={place.rant}\r\n                        onClick={e => setComment({ ...comment, rant: e.target.checked })}\r\n                        type=\"checkbox\"\r\n                        id=\"rant\"\r\n                        name=\"rant\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"Add Comment\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewCommentForm"]},"metadata":{},"sourceType":"module"}